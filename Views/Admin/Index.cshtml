@model IEnumerable<VertoDevTest.Models.PageSection>

@{
    ViewData["Title"] = "Admin Panel - Page Sections";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="admin-container">
    <div class="admin-header">
        <h1>Manage Page Sections</h1>
        <a asp-action="Create" class="btn btn-success">
            <span class="fas fa-plus"></span> Add New Section
        </a>
    </div>

    <div class="admin-filters">
        <div class="filter-group">
            <label>Filter by Type:</label>
            <select id="sectionFilter" onchange="filterSections()">
                <option value="all">All Sections</option>
                <option value="Hero">Hero Slider</option>
                <option value="Services">Services</option>
                <option value="Portfolio">Portfolio</option>
                <option value="About">About</option>
            </select>
        </div>
    </div>

    <div class="admin-table-container">
        <table class="admin-table">
            <thead>
                <tr>
                    <th>Order</th>
                    <th>Type</th>
                    <th>Title</th>
                    <th>Content Preview</th>
                    <th>Image</th>
                    <th>Status</th>
                    <th>Last Modified</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.OrderBy(m => m.DisplayOrder))
                {
                    <tr data-section-type="@item.SectionType">
                        <td>
                            <span class="order-badge">@item.DisplayOrder</span>
                        </td>
                        <td>
                            <span class="type-badge type-@item.SectionType.ToLower()">@item.SectionType</span>
                        </td>
                        <td>
                            <strong>@item.Title</strong>
                        </td>
                        <td>
                            <div class="content-preview">
                                @if (!string.IsNullOrEmpty(item.Content))
                                {
                                    @(item.Content.Length > 100 ? item.Content.Substring(0, 100) + "..." : item.Content)
                                }
                                else
                                {
                                    <em class="text-muted">No content</em>
                                }
                            </div>
                        </td>
                        <td>
                            @if (!string.IsNullOrEmpty(item.ImagePath))
                            {
                                <img src="@item.ImagePath" alt="@item.Title" class="admin-thumbnail" />
                            }
                            else
                            {
                                <i class="fas fa-camera fa-2x"></i>
                            }
                        </td>
                        <td>
                            @if (item.IsActive)
                            {
                                <span class="status-badge status-active">Active</span>
                            }
                            else
                            {
                                <span class="status-badge status-inactive">Inactive</span>
                            }
                        </td>
                        <td>
                            @if (item.ModifiedDate.HasValue)
                            {
                                @item.ModifiedDate.Value.ToString("MMM dd, yyyy")
                            }
                            else
                            {
                                @item.CreatedDate.ToString("MMM dd, yyyy")
                            }
                        </td>
                        <td class="action-buttons">
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn-icon btn-edit" title="Edit">
                                <i class="fas fa-pen"></i>
                            </a>

                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn-icon btn-delete" title="Delete" onclick="return confirm('Are you sure you want to delete this section?')">
                                <i class="fas fa-trash"></i>
                            </a>

                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @if (!Model.Any())
    {
    <div class="empty-state">
        <div class="empty-icon">
        <i class="fas fa-file-alt fa-3x"></i>
    </div>
    <h3>No sections found</h3>
    <p>Get started by creating your first page section.</p>
    <a asp-action="Create" class="btn btn-primary">Create Section</a>
</div>

    }
</div>

<style>
    .admin-container {
        padding: 2rem;
        max-width: 1400px;
        margin: 0 auto;
    }

    .admin-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        padding-bottom: 1rem;
        border-bottom: 2px solid #e0e0e0;
    }

    .admin-header h1 {
        font-size: 2rem;
        color: #2c3e50;
        margin: 0;
    }

    .admin-filters {
        background: #f8f9fa;
        padding: 1rem;
        border-radius: 8px;
        margin-bottom: 1.5rem;
    }

    .filter-group {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .filter-group label {
        font-weight: 600;
        color: #555;
    }

    .filter-group select {
        padding: 0.5rem 1rem;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 0.95rem;
    }

    .admin-table-container {
        overflow-x: auto;
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    .admin-table {
        width: 100%;
        border-collapse: collapse;
    }

    .admin-table thead {
        background: #2c3e50;
        color: white;
    }

    .admin-table th {
        padding: 1rem;
        text-align: left;
        font-weight: 600;
        font-size: 0.9rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .admin-table td {
        padding: 1rem;
        border-bottom: 1px solid #e0e0e0;
        vertical-align: middle;
    }

    .admin-table tbody tr:hover {
        background: #f8f9fa;
    }

    .order-badge {
        display: inline-block;
        background: #6c757d;
        color: white;
        padding: 0.25rem 0.75rem;
        border-radius: 12px;
        font-weight: 600;
        font-size: 0.85rem;
    }

    .type-badge {
        display: inline-block;
        padding: 0.35rem 0.85rem;
        border-radius: 4px;
        font-size: 0.8rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .type-hero { background: #e3f2fd; color: #1976d2; }
    .type-services { background: #f3e5f5; color: #7b1fa2; }
    .type-portfolio { background: #e8f5e9; color: #388e3c; }
    .type-about { background: #fff3e0; color: #f57c00; }

    .content-preview {
        max-width: 300px;
        color: #666;
        font-size: 0.9rem;
        line-height: 1.5;
    }

    .admin-thumbnail {
        width: 80px;
        height: 60px;
        object-fit: cover;
        border-radius: 4px;
        border: 2px solid #e0e0e0;
    }

    .no-image {
        font-size: 2rem;
        opacity: 0.3;
    }

    .status-badge {
        display: inline-block;
        padding: 0.35rem 0.85rem;
        border-radius: 12px;
        font-size: 0.8rem;
        font-weight: 600;
    }

    .status-active {
        background: #d4edda;
        color: #155724;
    }

    .status-inactive {
        background: #f8d7da;
        color: #721c24;
    }

    .action-buttons {
        display: flex;
        gap: 0.5rem;
    }

    .btn-icon {
        font-size: 1.2rem;
        text-decoration: none;
        cursor: pointer;
        transition: transform 0.2s;
    }

    .btn-icon:hover {
        transform: scale(1.2);
    }

    .btn {
        padding: 0.7rem 1.5rem;
        border: none;
        border-radius: 4px;
        font-weight: 600;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        cursor: pointer;
        transition: all 0.3s;
        font-size: 0.95rem;
    }

    .btn-success {
        background: #28a745;
        color: white;
    }

    .btn-success:hover {
        background: #218838;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(40, 167, 69, 0.3);
    }

    .btn-primary {
        background: #007bff;
        color: white;
    }

    .btn-primary:hover {
        background: #0056b3;
    }

    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    .empty-icon {
        font-size: 4rem;
        margin-bottom: 1rem;
        opacity: 0.5;
    }

    .empty-state h3 {
        color: #2c3e50;
        margin-bottom: 0.5rem;
    }

    .empty-state p {
        color: #666;
        margin-bottom: 2rem;
    }
</style>

<script>
    function filterSections() {
        const filter = document.getElementById('sectionFilter').value;
        const rows = document.querySelectorAll('.admin-table tbody tr');
        
        rows.forEach(row => {
            const sectionType = row.getAttribute('data-section-type');
            if (filter === 'all' || sectionType === filter) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    }
</script>